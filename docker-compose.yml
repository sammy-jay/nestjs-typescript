version: '3.8'
services:
  server:
    container_name: server
    build:
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - .:/server
    depends_on:
      - postgres
      - redis
      - mailhog

  client:
    container_name: client
    build:
      dockerfile: ./client/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client/:/client

  postgres:
    container_name: postgres
    image: postgres:14
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - /data/postgres:/data/postgres
    env_file:
      - docker.env
    networks:
      - postgres

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    volumes:
      - /data/pgadmin:/root/.pgadmin
    env_file:
      - docker.env
    networks:
      - postgres

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
        - redis

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: "none"
    ports:
      - "1025:1025"
      - "8025:8025"

  nginx:
    image: nginx:latest
    container_name: webserver
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  postgres:
    driver: bridge
